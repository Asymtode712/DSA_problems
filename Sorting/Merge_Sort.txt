void merge(vector<int> &arr, int l, int m, int h) {
     vector<int> temp;
     int left = l;      
     int right = m + 1;   

     while (left <= m && right <= h) {
        if (arr[left] <= arr[right]) {
            temp.push_back(arr[left]);
            left++;
        }
        else {
            temp.push_back(arr[right]);
            right++;
        }
     }

     while (left <= m) {
        temp.push_back(arr[left]);
        left++;
     }

     while (right <= h) {
        temp.push_back(arr[right]);
        right++;
     }

     for (int i = l; i <= h; i++) {
        arr[i] = temp[i - l];
     }
    }

    void mergeSort(vector<int>& arr, int l, int r) {
        // code here
        if (l >= r) return;
        int m = (l + r) / 2 ;
        mergeSort(arr, l, m);
        mergeSort(arr, m + 1, r);
        merge(arr, l, m, r);  
    }